{"ast":null,"code":"import _regeneratorRuntime from \"/home/dev/youtube_downloader/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dev/youtube_downloader/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dev/youtube_downloader/pages/index.js\";\nimport axios from 'axios';\nimport { URLSearchParams } from 'url'; // import VideoInfo from './models/VideoInfo';\n\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Home;\n\nfunction getVideoInfo(_x) {\n  return _getVideoInfo.apply(this, arguments);\n}\n\nfunction _getVideoInfo() {\n  _getVideoInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(videoId) {\n    var videoIdRegex, eurl, response, parsedResponse, jsonResponse, playabilityStatus, videoDetails, streamingData, videoInfo;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            videoIdRegex = /^[\\w_-]+$/;\n            eurl = \"https://youtube.googleapis.com/v/\".concat(videoId);\n\n            if (videoIdRegex.test(videoId)) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('Invalid videoId.');\n\n          case 4:\n            _context.next = 6;\n            return axios.get(\"https://www.youtube.com/get_video_info?video_id=\".concat(videoId, \"&el=embedded&eurl=\").concat(eurl, \"&sts=18333\"));\n\n          case 6:\n            response = _context.sent;\n            parsedResponse = Object.fromEntries(new URLSearchParams(response.data));\n            jsonResponse = JSON.parse(parsedResponse.player_response);\n            playabilityStatus = jsonResponse.playabilityStatus, videoDetails = jsonResponse.videoDetails, streamingData = jsonResponse.streamingData;\n            videoInfo = {\n              playabilityStatus: playabilityStatus,\n              videoDetails: videoDetails,\n              streamingData: streamingData\n            };\n            return _context.abrupt(\"return\", videoInfo);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getVideoInfo.apply(this, arguments);\n}\n\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/dev/youtube_downloader/pages/index.js"],"names":["axios","URLSearchParams","Home","getVideoInfo","videoId","videoIdRegex","eurl","test","Error","get","response","parsedResponse","Object","fromEntries","data","jsonResponse","JSON","parse","player_response","playabilityStatus","videoDetails","streamingData","videoInfo"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,KAAhC,C,CAEA;;AAEA,SAASC,IAAT,GAAgB;AACZ,sBACI;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KANQA,I;;SAQMC,Y;;;;;2EAAf,iBAA4BC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEUC,YAAAA,YAFV,GAEyB,WAFzB;AAIUC,YAAAA,IAJV,8CAIqDF,OAJrD;;AAAA,gBAMMC,YAAY,CAACE,IAAb,CAAkBH,OAAlB,CANN;AAAA;AAAA;AAAA;;AAAA,kBAOQ,IAAII,KAAJ,CAAU,kBAAV,CAPR;;AAAA;AAAA;AAAA,mBAUwBR,KAAK,CAACS,GAAN,2DAA6DL,OAA7D,+BAAyFE,IAAzF,gBAVxB;;AAAA;AAUOI,YAAAA,QAVP;AAYOC,YAAAA,cAZP,GAYwBC,MAAM,CAACC,WAAP,CAAmB,IAAIZ,eAAJ,CAAoBS,QAAQ,CAACI,IAA7B,CAAnB,CAZxB;AAcOC,YAAAA,YAdP,GAcsBC,IAAI,CAACC,KAAL,CAAWN,cAAc,CAACO,eAA1B,CAdtB;AAeSC,YAAAA,iBAfT,GAe4DJ,YAf5D,CAeSI,iBAfT,EAe4BC,YAf5B,GAe4DL,YAf5D,CAe4BK,YAf5B,EAe0CC,aAf1C,GAe4DN,YAf5D,CAe0CM,aAf1C;AAgBOC,YAAAA,SAhBP,GAgBmB;AAAEH,cAAAA,iBAAiB,EAAjBA,iBAAF;AAAqBC,cAAAA,YAAY,EAAZA,YAArB;AAAmCC,cAAAA,aAAa,EAAbA;AAAnC,aAhBnB;AAAA,6CAkBQC,SAlBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAqBA,eAAepB,IAAf","sourcesContent":["\nimport axios from 'axios';\nimport { URLSearchParams } from 'url';\n\n// import VideoInfo from './models/VideoInfo';\n\nfunction Home() {\n    return (\n        <div>\n            <input type=\"text\" ></input>\n        </div>\n    );\n}\n\nasync function getVideoInfo(videoId) {\n\n    const videoIdRegex = /^[\\w_-]+$/;\n    \n    const eurl = `https://youtube.googleapis.com/v/${videoId}`;\n    \n\tif (!videoIdRegex.test(videoId)) {\n\t\tthrow new Error('Invalid videoId.');\n\t}\n\n\tconst response = await axios.get(`https://www.youtube.com/get_video_info?video_id=${videoId}&el=embedded&eurl=${eurl}&sts=18333`);\n\n\tconst parsedResponse = Object.fromEntries(new URLSearchParams(response.data));\n\n\tconst jsonResponse = JSON.parse(parsedResponse.player_response);\n\tconst { playabilityStatus, videoDetails, streamingData } = jsonResponse;\n\tconst videoInfo = { playabilityStatus, videoDetails, streamingData };\n\n\treturn videoInfo;\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}