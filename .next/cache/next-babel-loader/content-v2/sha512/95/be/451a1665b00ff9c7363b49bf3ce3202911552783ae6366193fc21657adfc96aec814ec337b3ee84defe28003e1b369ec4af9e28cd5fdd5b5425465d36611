{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dev/youtube_downloader/pages/index.js\";\nimport axios from 'axios';\nimport { URLSearchParams } from 'url'; // import VideoInfo from './models/VideoInfo';\n\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"ID do V\\xEDdeo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"videoId\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getVideoInfo(),\n      children: \"Informa\\xE7\\xF5es do v\\xEDdeo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"json\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\nasync function getVideoInfo() {\n  const videoIdRegex = /^[\\w_-]+$/;\n  const videoId = 'EW7m2WIvFgQ';\n  const eurl = `https://youtube.googleapis.com/v/${videoId}`;\n\n  if (!videoIdRegex.test(videoId)) {\n    throw new Error('Invalid videoId.');\n  }\n\n  const response = await axios.get(`https://www.youtube.com/get_video_info?video_id=${videoId}&el=embedded&eurl=${eurl}&sts=18333`);\n  console.log('1....: ', response);\n  const parsedResponse = response.data; // const jsonResponse = JSON.parse(parsedResponse.player_response);\n\n  let painel = document.getElementById('json').innerHTML = parsedResponse;\n  console.log('2....: ', parsedResponse.player_response); // const { playabilityStatus, videoDetails, streamingData } = jsonResponse;\n  // const videoInfo = { playabilityStatus, videoDetails, streamingData };\n  // return videoInfo;\n\n  return '';\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/dev/youtube_downloader/pages/index.js"],"names":["axios","URLSearchParams","Home","getVideoInfo","videoIdRegex","videoId","eurl","test","Error","response","get","console","log","parsedResponse","data","painel","document","getElementById","innerHTML","player_response"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,KAAhC,C,CAEA;;AAEA,SAASC,IAAT,GAAgB;AACZ,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMC,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAM,MAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;AAED,eAAeA,YAAf,GAA8B;AAC1B,QAAMC,YAAY,GAAG,WAArB;AACA,QAAMC,OAAO,GAAG,aAAhB;AACA,QAAMC,IAAI,GAAI,oCAAmCD,OAAQ,EAAzD;;AACH,MAAI,CAACD,YAAY,CAACG,IAAb,CAAkBF,OAAlB,CAAL,EAAiC;AAC1B,UAAM,IAAIG,KAAJ,CAAU,kBAAV,CAAN;AACN;;AAED,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,mDAAkDL,OAAQ,qBAAoBC,IAAK,YAA9F,CAAvB;AACGK,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,QAAvB;AAEH,QAAMI,cAAc,GAAGJ,QAAQ,CAACK,IAAhC,CAX6B,CAY7B;;AAEG,MAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4CL,cAAzD;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,cAAc,CAACM,eAAtC,EAf0B,CAiB7B;AACA;AAEG;;AACA,SAAO,EAAP;AACH;;AAED,eAAejB,IAAf","sourcesContent":["\nimport axios from 'axios';\nimport { URLSearchParams } from 'url';\n\n// import VideoInfo from './models/VideoInfo';\n\nfunction Home() {\n    return (\n        <div>\n            <label>ID do Vídeo</label>\n            <input type=\"text\" id=\"videoId\"></input>\n            <button onClick={() => getVideoInfo()}>Informações do vídeo</button>\n            <br></br>\n            <span id='json'></span>\n        </div>\n    );\n}\n\nasync function getVideoInfo() {\n    const videoIdRegex = /^[\\w_-]+$/;\n    const videoId = 'EW7m2WIvFgQ';\n    const eurl = `https://youtube.googleapis.com/v/${videoId}`;\n\tif (!videoIdRegex.test(videoId)) {\n        throw new Error('Invalid videoId.');\n\t}\n    \n\tconst response = await axios.get(`https://www.youtube.com/get_video_info?video_id=${videoId}&el=embedded&eurl=${eurl}&sts=18333`);\n    console.log('1....: ', response);\n    \n\tconst parsedResponse = response.data;\n\t// const jsonResponse = JSON.parse(parsedResponse.player_response);\n    \n    let painel = document.getElementById('json').innerHTML = parsedResponse;\n    console.log('2....: ', parsedResponse.player_response);\n\n\t// const { playabilityStatus, videoDetails, streamingData } = jsonResponse;\n\t// const videoInfo = { playabilityStatus, videoDetails, streamingData };\n\n    // return videoInfo;\n    return '';\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}