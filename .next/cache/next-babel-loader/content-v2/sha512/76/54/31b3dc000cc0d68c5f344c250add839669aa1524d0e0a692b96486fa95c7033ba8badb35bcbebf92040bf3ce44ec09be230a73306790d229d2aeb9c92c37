{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dev/youtube_downloader/pages/index.js\";\nimport axios from \"axios\";\nimport { URLSearchParams } from \"url\"; // import VideoInfo from './models/VideoInfo';\n\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"ID do V\\xEDdeo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"videoId\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getVideoInfo(),\n      children: \"Informa\\xE7\\xF5es do v\\xEDdeo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"json\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nasync function getVideoInfo() {\n  const videoIdRegex = /^[\\w_-]+$/;\n  const videoId = \"EW7m2WIvFgQ\";\n  const eurl = `https://youtube.googleapis.com/v/${videoId}`;\n\n  if (!videoIdRegex.test(videoId)) {\n    throw new Error(\"Invalid videoId.\");\n  }\n\n  const response = await axios.get(`https://www.youtube.com/get_video_info?video_id=${videoId}&el=embedded&eurl=${eurl}&sts=18333`, {\n    headers: {\n      Accept: \"application/json\"\n    }\n  });\n  console.log(\"aqui \", eurl);\n  response.headers[\"content-type\"];\n  const {\n    data\n  } = response;\n  console.log(\"1....: \", qsToJson(data)); // const parsedResponse = response.data;\n  // const jsonResponse = JSON.parse(parsedResponse.player_response);\n\n  let painel = document.getElementById(\"json\").innerHTML = data; // console.log('2....: ', JSON.parse(response.data));\n\n  console.log(\"2....: \", response); // const { playabilityStatus, videoDetails, streamingData } = jsonResponse;\n  // const videoInfo = { playabilityStatus, videoDetails, streamingData };\n  // return videoInfo;\n\n  return \"\";\n}\n\nfunction qsToJson(qs) {\n  var res = {};\n  var pars = qs.split(\"&\");\n  var kv, k, v;\n  var obj = {};\n  pars.map(e => {\n    kv = e.split(\"=\");\n    k = kv[0];\n    v = kv[1];\n    res[k] = decodeURIComponent(v);\n    console.log(\"res..: \", decodeURIComponent(v));\n  }); // for (i in pars) {\n  //   kv = pars[i].split('=');\n  //   k = kv[0];\n  //   v = kv[1];\n  //   res[k] = decodeURIComponent(v);\n  // }\n\n  return res;\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/dev/youtube_downloader/pages/index.js"],"names":["axios","URLSearchParams","Home","getVideoInfo","videoIdRegex","videoId","eurl","test","Error","response","get","headers","Accept","console","log","data","qsToJson","painel","document","getElementById","innerHTML","qs","res","pars","split","kv","k","v","obj","map","e","decodeURIComponent"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,KAAhC,C,CAEA;;AAEA,SAASC,IAAT,GAAgB;AACd,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMC,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAM,MAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;AAED,eAAeA,YAAf,GAA8B;AAC5B,QAAMC,YAAY,GAAG,WAArB;AACA,QAAMC,OAAO,GAAG,aAAhB;AACA,QAAMC,IAAI,GAAI,oCAAmCD,OAAQ,EAAzD;;AACA,MAAI,CAACD,YAAY,CAACG,IAAb,CAAkBF,OAAlB,CAAL,EAAiC;AAC/B,UAAM,IAAIG,KAAJ,CAAU,kBAAV,CAAN;AACD;;AAED,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CACpB,mDAAkDL,OAAQ,qBAAoBC,IAAK,YAD/D,EAErB;AACEK,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AADX,GAFqB,CAAvB;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBR,IAArB;AACAG,EAAAA,QAAQ,CAACE,OAAT,CAAiB,cAAjB;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAAWN,QAAjB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,QAAQ,CAACD,IAAD,CAA/B,EAlB4B,CAoB5B;AACA;;AAEA,MAAIE,MAAM,GAAIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4CL,IAA1D,CAvB4B,CAwB5B;;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,QAAvB,EAzB4B,CA0B5B;AACA;AAEA;;AACA,SAAO,EAAP;AACD;;AAED,SAASO,QAAT,CAAkBK,EAAlB,EAAsB;AACpB,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAGF,EAAE,CAACG,KAAH,CAAS,GAAT,CAAX;AACA,MAAIC,EAAJ,EAAQC,CAAR,EAAWC,CAAX;AACA,MAAIC,GAAG,GAAG,EAAV;AAEAL,EAAAA,IAAI,CAACM,GAAL,CAAUC,CAAD,IAAO;AACdL,IAAAA,EAAE,GAAGK,CAAC,CAACN,KAAF,CAAQ,GAAR,CAAL;AACAE,IAAAA,CAAC,GAAGD,EAAE,CAAC,CAAD,CAAN;AACAE,IAAAA,CAAC,GAAGF,EAAE,CAAC,CAAD,CAAN;AACAH,IAAAA,GAAG,CAACI,CAAD,CAAH,GAASK,kBAAkB,CAACJ,CAAD,CAA3B;AAEAd,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBiB,kBAAkB,CAACJ,CAAD,CAAzC;AACD,GAPD,EANoB,CAcpB;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOL,GAAP;AACD;;AAED,eAAepB,IAAf","sourcesContent":["import axios from \"axios\";\nimport { URLSearchParams } from \"url\";\n\n// import VideoInfo from './models/VideoInfo';\n\nfunction Home() {\n  return (\n    <div>\n      <label>ID do Vídeo</label>\n      <input type=\"text\" id=\"videoId\"></input>\n      <button onClick={() => getVideoInfo()}>Informações do vídeo</button>\n      <br></br>\n      <span id=\"json\"></span>\n    </div>\n  );\n}\n\nasync function getVideoInfo() {\n  const videoIdRegex = /^[\\w_-]+$/;\n  const videoId = \"EW7m2WIvFgQ\";\n  const eurl = `https://youtube.googleapis.com/v/${videoId}`;\n  if (!videoIdRegex.test(videoId)) {\n    throw new Error(\"Invalid videoId.\");\n  }\n\n  const response = await axios.get(\n    `https://www.youtube.com/get_video_info?video_id=${videoId}&el=embedded&eurl=${eurl}&sts=18333`,\n    {\n      headers: { Accept: \"application/json\" },\n    }\n  );\n  console.log(\"aqui \", eurl);\n  response.headers[\"content-type\"];\n\n  const { data } = response;\n  console.log(\"1....: \", qsToJson(data));\n\n  // const parsedResponse = response.data;\n  // const jsonResponse = JSON.parse(parsedResponse.player_response);\n\n  let painel = (document.getElementById(\"json\").innerHTML = data);\n  // console.log('2....: ', JSON.parse(response.data));\n  console.log(\"2....: \", response);\n  // const { playabilityStatus, videoDetails, streamingData } = jsonResponse;\n  // const videoInfo = { playabilityStatus, videoDetails, streamingData };\n\n  // return videoInfo;\n  return \"\";\n}\n\nfunction qsToJson(qs) {\n  var res = {};\n  var pars = qs.split(\"&\");\n  var kv, k, v;\n  var obj = {};\n\n  pars.map((e) => {\n    kv = e.split(\"=\");\n    k = kv[0];\n    v = kv[1];\n    res[k] = decodeURIComponent(v);\n\n    console.log(\"res..: \", decodeURIComponent(v));\n  });\n  // for (i in pars) {\n  //   kv = pars[i].split('=');\n  //   k = kv[0];\n  //   v = kv[1];\n  //   res[k] = decodeURIComponent(v);\n  // }\n  return res;\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}