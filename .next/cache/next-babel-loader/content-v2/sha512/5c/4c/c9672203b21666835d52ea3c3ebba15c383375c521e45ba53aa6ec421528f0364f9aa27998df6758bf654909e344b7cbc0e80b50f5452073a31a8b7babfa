{"ast":null,"code":"import _regeneratorRuntime from \"/home/dev/youtube_downloader/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dev/youtube_downloader/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dev/youtube_downloader/pages/index.js\";\nimport axios from \"axios\";\nimport { URLSearchParams } from \"url\"; // import VideoInfo from './models/VideoInfo';\n\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"ID do V\\xEDdeo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"videoId\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return getVideoInfo();\n      },\n      children: \"Informa\\xE7\\xF5es do v\\xEDdeo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"json\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://r3---sn-8p8v-bg0e.googlevideo.com/videoplayback?expire=1612299805&ei=vWkZYJPoN9HKwATds56ACw&ip=2804%3A431%3Ac7eb%3A888b%3Aa4dd%3Aa930%3Ad26c%3A8eeb&id=o-AH5gN-EVJBjUaZC-a9Bi9bQZJjjPSgS33sN-afC_Njkb&itag=18&source=youtube&requiressl=yes&mh=s1&mm=31%2C29&mn=sn-8p8v-bg0e%2Csn-bg07dnzs&ms=au%2Crdu&mv=m&mvi=3&pl=47&initcwndbps=581250&vprv=1&mime=video%2Fmp4&ns=xawAMatFggkLa6SnV1EiRzQF&gir=yes&clen=72040956&ratebypass=yes&dur=1867.766&lmt=1604900132706607&mt=1612277818&fvip=3&c=WEB&txp=6410222&n=Z2wB6tLTXZW_Pf9nkR5miU&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cvprv%2Cmime%2Cns%2Cgir%2Cclen%2Cratebypass%2Cdur%2Clmt&sig=AOq0QJ8wRQIgBKLTnkWyQmLVOg4JER6dECuec-GHIo4Kwulu0pu8uqACIQDAVGu8Y5ntHrmHK8U71WSzMF5IMQPXel0EJbzbXtpL4g%3D%3D&lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&lsig=AG3C_xAwRQIhAJe79iOce43dLBRTidH_gFekGYKz8a3f0Nb4XA08s9pqAiAhqRV0Yhzt6hjhz4DfJWOlUVqpNMq_uYPlmH-4pI_5Mg%3D%3D\",\n      download: true,\n      children: \"Download Receipt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Home;\n\nfunction getVideoInfo() {\n  return _getVideoInfo.apply(this, arguments);\n}\n\nfunction _getVideoInfo() {\n  _getVideoInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var videoIdRegex, videoId, eurl, response, data, stream, player_response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            videoIdRegex = /^[\\w_-]+$/;\n            videoId = \"EW7m2WIvFgQ\";\n            eurl = \"https://youtube.googleapis.com/v/\".concat(videoId);\n\n            if (videoIdRegex.test(videoId)) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error(\"Invalid videoId.\");\n\n          case 5:\n            _context.next = 7;\n            return axios.get(\"https://www.youtube.com/get_video_info?video_id=\".concat(videoId, \"&el=embedded&eurl=\").concat(eurl, \"&sts=18333\"), {\n              headers: {\n                Accept: \"application/json\"\n              }\n            });\n\n          case 7:\n            response = _context.sent;\n            console.log(\"aqui \", eurl);\n            response.headers[\"content-type\"];\n            data = response.data; //   console.log(\"1....: \", qsToJson(data));\n            // const parsedResponse = response.data;\n            // const jsonResponse = JSON.parse(parsedResponse.player_response);\n\n            document.getElementById(\"json\").innerHTML = qsToJson(data); //   console.log('2....: ', JSON.stringify(data));\n            //   console.log(\"2....: \", qsToJson(data));\n\n            stream = qsToJson(data);\n            player_response = JSON.parse(stream.player_response);\n            console.log(\"-------- \", player_response.streamingData.formats[0]);\n            downloadURI(player_response.streamingData.formats[0].url, 'bla'); // window.location.href = player_response.streamingData.formats[0].url;\n            // const { playabilityStatus, videoDetails, streamingData } = jsonResponse;\n            // const videoInfo = { playabilityStatus, videoDetails, streamingData };\n            // return videoInfo;\n\n            return _context.abrupt(\"return\", \"\");\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getVideoInfo.apply(this, arguments);\n}\n\nfunction downloadURI(uri, name) {\n  var link = document.createElement(\"a\");\n  link.download = name;\n  link.href = uri;\n  link.setAttribute('href', 'mp4' + encodeURIComponent(uri)); // 'video/mp4;+codecs=\"avc1.42001E,+mp4a.40.2\"'\n\n  link.setAttribute('target', '_parent');\n  document.body.appendChild(link);\n  link.click(); // document.body.removeChild(link);\n  // delete link;\n}\n\nfunction qsToJson(qs) {\n  var res = {};\n  var pars = qs.split(\"&\");\n  var kv, k, v;\n  var obj = {}; //   pars.map((e) => {\n  //     kv = e.split(\"=\");\n  //     k = kv[0];\n  //     v = kv[1];\n  //     console.log('res...:', res);\n  //     res[k] = decodeURIComponent(v);\n  //     console.log(\"res[k] \", res);\n  //   });\n\n  pars.map(function (e) {\n    kv = e.split(\"=\");\n    k = kv[0];\n    v = kv[1];\n\n    if (k === \"player_response\") {\n      res[k] = decodeURIComponent(v); // console.log('-------- ', JSON.parse(res[k]).streamingData)\n    }\n  }); //   console.log(\"-------- \", JSON.parse(res.player_response));\n\n  return res;\n}\n\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/dev/youtube_downloader/pages/index.js"],"names":["axios","URLSearchParams","Home","getVideoInfo","videoIdRegex","videoId","eurl","test","Error","get","headers","Accept","response","console","log","data","document","getElementById","innerHTML","qsToJson","stream","player_response","JSON","parse","streamingData","formats","downloadURI","url","uri","name","link","createElement","download","href","setAttribute","encodeURIComponent","body","appendChild","click","qs","res","pars","split","kv","k","v","obj","map","e","decodeURIComponent"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { URLSearchParams } from \"url\";\n\n// import VideoInfo from './models/VideoInfo';\n\nfunction Home() {\n  return (\n    <div>\n      <label>ID do Vídeo</label>\n      <input type=\"text\" id=\"videoId\"></input>\n      <button onClick={() => getVideoInfo()}>Informações do vídeo</button>\n      <br></br>\n      <span id=\"json\"></span>\n      <a href=\"https://r3---sn-8p8v-bg0e.googlevideo.com/videoplayback?expire=1612299805&ei=vWkZYJPoN9HKwATds56ACw&ip=2804%3A431%3Ac7eb%3A888b%3Aa4dd%3Aa930%3Ad26c%3A8eeb&id=o-AH5gN-EVJBjUaZC-a9Bi9bQZJjjPSgS33sN-afC_Njkb&itag=18&source=youtube&requiressl=yes&mh=s1&mm=31%2C29&mn=sn-8p8v-bg0e%2Csn-bg07dnzs&ms=au%2Crdu&mv=m&mvi=3&pl=47&initcwndbps=581250&vprv=1&mime=video%2Fmp4&ns=xawAMatFggkLa6SnV1EiRzQF&gir=yes&clen=72040956&ratebypass=yes&dur=1867.766&lmt=1604900132706607&mt=1612277818&fvip=3&c=WEB&txp=6410222&n=Z2wB6tLTXZW_Pf9nkR5miU&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cvprv%2Cmime%2Cns%2Cgir%2Cclen%2Cratebypass%2Cdur%2Clmt&sig=AOq0QJ8wRQIgBKLTnkWyQmLVOg4JER6dECuec-GHIo4Kwulu0pu8uqACIQDAVGu8Y5ntHrmHK8U71WSzMF5IMQPXel0EJbzbXtpL4g%3D%3D&lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&lsig=AG3C_xAwRQIhAJe79iOce43dLBRTidH_gFekGYKz8a3f0Nb4XA08s9pqAiAhqRV0Yhzt6hjhz4DfJWOlUVqpNMq_uYPlmH-4pI_5Mg%3D%3D\" download>Download Receipt</a>\n    </div>\n  );\n}\n\nasync function getVideoInfo() {\n  const videoIdRegex = /^[\\w_-]+$/;\n  const videoId = \"EW7m2WIvFgQ\";\n  const eurl = `https://youtube.googleapis.com/v/${videoId}`;\n  if (!videoIdRegex.test(videoId)) {\n    throw new Error(\"Invalid videoId.\");\n  }\n\n  const response = await axios.get(\n    `https://www.youtube.com/get_video_info?video_id=${videoId}&el=embedded&eurl=${eurl}&sts=18333`,\n    {\n      headers: { Accept: \"application/json\" },\n    }\n  );\n  console.log(\"aqui \", eurl);\n  response.headers[\"content-type\"];\n\n  const { data } = response;\n  //   console.log(\"1....: \", qsToJson(data));\n\n  // const parsedResponse = response.data;\n  // const jsonResponse = JSON.parse(parsedResponse.player_response);\n\n  document.getElementById(\"json\").innerHTML = qsToJson(data);\n  //   console.log('2....: ', JSON.stringify(data));\n  //   console.log(\"2....: \", qsToJson(data));\n  const stream = qsToJson(data);\n  const player_response = JSON.parse(stream.player_response);\n\n  console.log(\"-------- \", player_response.streamingData.formats[0]);\n  downloadURI(player_response.streamingData.formats[0].url, 'bla');\n// window.location.href = player_response.streamingData.formats[0].url;\n  // const { playabilityStatus, videoDetails, streamingData } = jsonResponse;\n  // const videoInfo = { playabilityStatus, videoDetails, streamingData };\n\n  // return videoInfo;\n  return \"\";\n}\n\nfunction downloadURI(uri, name) {\n    var link = document.createElement(\"a\");\n    link.download = name;\n    link.href = uri;\n    \n    link.setAttribute('href', 'mp4' + encodeURIComponent(uri));\n    // 'video/mp4;+codecs=\"avc1.42001E,+mp4a.40.2\"'\n    link.setAttribute('target', '_parent');\n    document.body.appendChild(link);\n    link.click();\n    // document.body.removeChild(link);\n    // delete link;\n  }\n\nfunction qsToJson(qs) {\n  var res = {};\n  var pars = qs.split(\"&\");\n  var kv, k, v;\n  var obj = {};\n\n  //   pars.map((e) => {\n  //     kv = e.split(\"=\");\n  //     k = kv[0];\n  //     v = kv[1];\n  //     console.log('res...:', res);\n  //     res[k] = decodeURIComponent(v);\n\n  //     console.log(\"res[k] \", res);\n  //   });\n  pars.map((e) => {\n    kv = e.split(\"=\");\n    k = kv[0];\n    v = kv[1];\n    if (k === \"player_response\") {\n      res[k] = decodeURIComponent(v);\n      // console.log('-------- ', JSON.parse(res[k]).streamingData)\n    }\n  });\n//   console.log(\"-------- \", JSON.parse(res.player_response));\n  return res;\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}